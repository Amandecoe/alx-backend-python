pipeline {
    agent any

    environment {
        // GitHub credentials stored in Jenkins
        GIT_CREDENTIALS_ID = '1234'
        // Docker Hub credentials stored in Jenkins
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        // Docker Hub repo (change to your DockerHub username/repo)
        DOCKER_IMAGE = 'amanuelpk/messaging_app'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: "${env.GIT_CREDENTIALS_ID}",
                    url: 'https://github.com/Amandecoe/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                python3 -m venv venv
                . venv/bin/activate
                pip3 install --upgrade pip
                pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                . venv/bin/activate
                pytest --junitxml=messaging_app/reports/test-results.xml
                '''
            }
            post {
                always {
                    junit 'messaging_app/reports/test-results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                     // Build Docker image using messaging_app folder as context
                     dockerImage = docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}", "messaging_app")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                        dockerImage.push()
                        dockerImage.push('latest')  // also tag as latest
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished!'
        }
    }
}
